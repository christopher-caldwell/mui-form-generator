{"version":3,"sources":["../../../src/providers/Configuration.tsx","../../../../src/components/inputs/Select.tsx","../../../../src/components/inputs/Text.tsx","../../../../src/components/inputs/Radio.tsx","../../../../src/components/inputs/Checkbox.tsx","../../../../src/components/inputs/CustomOverride.tsx","../../../../src/components/inputs/Switch.tsx","../../../../src/components/inputs/ManyOptionSingleChoice.tsx","../../../../src/components/inputs/MultiCheckbox.tsx","../../../../src/components/form-inputs/index.tsx","../../../src/views/MuiForm.tsx","components/Date.tsx","forms/kitchen-sink/index.tsx","App.tsx","index.tsx"],"names":["selectedItems","setSelectedItems","FormInputDate","field","value","onChange","error","fieldState","LocalizationProvider","dateAdapter","AdapterDateFns","DatePicker","label","inputFormat","renderInput","params","TextField","fullWidth","defaultValues","one","two","three","favoriteCommander","favoriteUnit","isSignedUpForNewsletter","startDate","Date","doesWantIceCream","isWifiOn","options","favoriteSeries","inputs","type","config","control","rules","required","message","pattern","name","gridProps","xs","md","radioGroupProps","row","helperText","globalGridProps","children","props","Form","handleSubmit","useContext","MuiFormContext","gridSpacing","Button","sx","marginTop","spacing","variant","onClick","data","patchDiff","diff","console","log","App","Box","width","display","justifyContent","paddingTop","maxWidth","sm","lg","Typography","fontSize","marginBottom","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.607be33e.chunk.js","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { createContext } from 'react';\nimport { useForm } from 'react-hook-form';\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport var MuiFormContext = createContext({});\nexport var MuiFormProvider = function (_a) {\n    var children = _a.children, props = _a.props;\n    var useFormResult = useForm(props);\n    return _jsx(MuiFormContext.Provider, __assign({ value: useFormResult }, { children: children }), void 0);\n};\n//# sourceMappingURL=Configuration.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useContext } from 'react';\nimport { Controller } from 'react-hook-form';\nimport { TextField, MenuItem, Grid } from '@mui/material';\nimport { MuiFormContext } from '../../providers';\nexport var FormInputSelect = function (_a) {\n    var name = _a.name, label = _a.label, rules = _a.rules, options = _a.options, inputProps = _a.inputProps, _b = _a.gridProps, gridProps = _b === void 0 ? { xs: 12 } : _b;\n    var control = useContext(MuiFormContext).control;\n    return (_jsx(Grid, __assign({ item: true }, gridProps, { children: _jsx(Controller, { rules: rules, name: name, control: control, render: function (_a) {\n                var _b = _a.field, onChange = _b.onChange, value = _b.value, error = _a.fieldState.error;\n                return (_jsx(TextField, __assign({}, inputProps, { select: true, fullWidth: true, onChange: onChange, value: value, label: label, error: !!error, helperText: error ? error.message || ' ' : (inputProps === null || inputProps === void 0 ? void 0 : inputProps.helperText) || ' ' }, { children: options.map(function (_a) {\n                        var value = _a.value, label = _a.label;\n                        return (_jsx(MenuItem, __assign({ value: value }, { children: label }), value));\n                    }) }), void 0));\n            } }, void 0) }), void 0));\n};\n//# sourceMappingURL=Select.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useContext } from 'react';\nimport { Controller } from 'react-hook-form';\nimport { TextField, Grid } from '@mui/material';\nimport { MuiFormContext } from '../../providers';\nexport var FormInputText = function (_a) {\n    var name = _a.name, rules = _a.rules, label = _a.label, textFieldProps = _a.textFieldProps, _b = _a.gridProps, gridProps = _b === void 0 ? { xs: 12 } : _b;\n    var control = useContext(MuiFormContext).control;\n    return (_jsx(Grid, __assign({ item: true }, gridProps, { children: _jsx(Controller, { name: name, control: control, rules: rules, render: function (_a) {\n                var _b = _a.field, onChange = _b.onChange, value = _b.value, error = _a.fieldState.error;\n                return (_jsx(TextField, __assign({}, textFieldProps, { \n                    // Making the helper text a constant prevents layout shift when messages appear\n                    helperText: error ? error.message || ' ' : (textFieldProps === null || textFieldProps === void 0 ? void 0 : textFieldProps.helperText) || ' ', error: !!error, onChange: onChange, value: value, fullWidth: true, label: label }), void 0));\n            } }, void 0) }), void 0));\n};\n//# sourceMappingURL=Text.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useContext } from 'react';\nimport { FormControl, FormControlLabel, FormHelperText, FormLabel, Radio, RadioGroup, Grid } from '@mui/material';\nimport { Controller } from 'react-hook-form';\nimport { MuiFormContext } from '../../providers';\nexport var FormInputRadio = function (_a) {\n    var name = _a.name, label = _a.label, rules = _a.rules, options = _a.options, radioGroupProps = _a.radioGroupProps, globalRadioProps = _a.globalRadioProps, helperText = _a.helperText, _b = _a.gridProps, gridProps = _b === void 0 ? { xs: 12 } : _b;\n    var control = useContext(MuiFormContext).control;\n    return (_jsx(Grid, __assign({ item: true }, gridProps, { children: _jsx(Controller, { name: name, rules: rules, control: control, render: function (_a) {\n                var _b = _a.field, onChange = _b.onChange, value = _b.value, error = _a.fieldState.error;\n                return (_jsxs(FormControl, __assign({ component: 'fieldset', error: !!error }, { children: [_jsx(FormLabel, __assign({ component: 'legend' }, { children: label }), void 0), _jsx(RadioGroup, __assign({}, radioGroupProps, { value: value, onChange: onChange }, { children: options.map(function (option) { return (_jsx(FormControlLabel, __assign({}, option, { control: _jsx(Radio, __assign({}, globalRadioProps, option.radioProps), void 0) }), option.label)); }) }), void 0), _jsx(FormHelperText, { children: error ? error.message || ' ' : helperText || ' ' }, void 0)] }), void 0));\n            } }, void 0) }), void 0));\n};\n//# sourceMappingURL=Radio.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useContext } from 'react';\nimport { FormGroup, FormControlLabel, FormControl, Checkbox, Grid, FormHelperText } from '@mui/material';\nimport { Controller } from 'react-hook-form';\nimport { MuiFormContext } from '../../providers';\nexport var FormInputCheckbox = function (_a) {\n    var name = _a.name, label = _a.label, rules = _a.rules, formControlProps = _a.formControlProps, checkboxProps = _a.checkboxProps, helperText = _a.helperText, _b = _a.gridProps, gridProps = _b === void 0 ? { xs: 12 } : _b;\n    var control = useContext(MuiFormContext).control;\n    return (_jsx(Grid, __assign({ item: true }, gridProps, { children: _jsx(Controller, { name: name, control: control, rules: rules, render: function (_a) {\n                var _b = _a.field, onChange = _b.onChange, value = _b.value, error = _a.fieldState.error;\n                return (_jsx(FormControl, __assign({}, formControlProps, { error: !!error }, { children: _jsxs(FormGroup, { children: [_jsx(FormControlLabel, { control: _jsx(Checkbox, __assign({}, checkboxProps, { checked: value, onChange: onChange, inputProps: { 'aria-label': 'controlled' } }), void 0), label: label }, void 0), _jsx(FormHelperText, { children: error ? error.message || ' ' : helperText || ' ' }, void 0)] }, void 0) }), void 0));\n            } }, void 0) }), void 0));\n};\n//# sourceMappingURL=Checkbox.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useContext } from 'react';\n// import DateFnsUtils from '@date-io/date-fns'\nimport { Grid } from '@mui/material';\nimport { Controller } from 'react-hook-form';\nimport { MuiFormContext } from '../../providers';\nexport var FormInputCustomOverride = function (_a) {\n    var name = _a.name, children = _a.children, rules = _a.rules, _b = _a.gridProps, gridProps = _b === void 0 ? { xs: 12 } : _b;\n    var control = useContext(MuiFormContext).control;\n    return (_jsx(Grid, __assign({ item: true }, gridProps, { children: _jsx(Controller, { rules: rules, name: name, control: control, render: children }, void 0) }), void 0));\n};\n//# sourceMappingURL=CustomOverride.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useContext } from 'react';\nimport { FormGroup, FormControlLabel, Switch, Grid, FormHelperText } from '@mui/material';\nimport { Controller } from 'react-hook-form';\nimport { MuiFormContext } from '../../providers';\nexport var FormInputSwitch = function (_a) {\n    var name = _a.name, label = _a.label, rules = _a.rules, switchProps = _a.switchProps, formGroupProps = _a.formGroupProps, formControlLabelProps = _a.formControlLabelProps, helperText = _a.helperText, _b = _a.gridProps, gridProps = _b === void 0 ? { xs: 12 } : _b;\n    var control = useContext(MuiFormContext).control;\n    return (_jsx(Grid, __assign({ item: true }, gridProps, { children: _jsx(Controller, { rules: rules, name: name, control: control, render: function (_a) {\n                var _b = _a.field, onChange = _b.onChange, value = _b.value, error = _a.fieldState.error;\n                return (_jsxs(FormGroup, __assign({}, formGroupProps, { children: [_jsx(FormControlLabel, __assign({}, formControlLabelProps, { control: _jsx(Switch, __assign({}, switchProps, { checked: value, onChange: onChange, inputProps: { 'aria-label': 'controlled' } }), void 0), label: label }), void 0), _jsx(FormHelperText, { children: error ? error.message || ' ' : helperText || ' ' }, void 0)] }), void 0));\n            } }, void 0) }), void 0));\n};\n//# sourceMappingURL=Switch.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { createElement as _createElement } from \"react\";\nimport { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { useContext } from 'react';\nimport { Checkbox, FormControl, FormControlLabel, Grid, Typography } from '@mui/material';\nimport { Controller } from 'react-hook-form';\nimport { MuiFormContext } from '../../providers';\nexport var FormInputManyOptionSingleChoice = function (_a) {\n    var name = _a.name, label = _a.label, rules = _a.rules, options = _a.options, _b = _a.gridProps, gridProps = _b === void 0 ? { xs: 12 } : _b, _c = _a.globalGridProps, globalGridProps = _c === void 0 ? { xs: 12 } : _c, globalCheckboxProps = _a.globalCheckboxProps, helperText = _a.helperText, _d = _a.subtitleProps, subtitleProps = _d === void 0 ? { variant: 'caption', sx: { color: function (_a) {\n                var palette = _a.palette;\n                return palette.text.secondary;\n            } } } : _d, _e = _a.titleProps, titleProps = _e === void 0 ? { variant: 'h6' } : _e;\n    var control = useContext(MuiFormContext).control;\n    return (_jsxs(Grid, __assign({}, gridProps, { item: true, container: true, sx: { paddingBottom: function (_a) {\n                var spacing = _a.spacing;\n                return spacing(2);\n            } } }, { children: [_jsxs(Grid, __assign({ item: true, xs: 12 }, { children: [_jsx(Typography, __assign({}, titleProps, { children: label }), void 0), _jsx(Typography, __assign({}, subtitleProps, { children: helperText }), void 0)] }), void 0), _jsx(Controller, { name: name, control: control, rules: rules, render: function (_a) {\n                    var _b = _a.field, valueFromFormControl = _b.value, onChange = _b.onChange;\n                    return (_jsx(_Fragment, { children: options.map(function (_a) {\n                            var label = _a.label, checkboxValue = _a.value, gridProps = _a.gridProps, checkboxProps = _a.checkboxProps;\n                            // The `checkboxLabel` can be omitted, if so use the label as the value\n                            var thisCheckboxValue = checkboxValue || label;\n                            return (_createElement(Grid, __assign({}, (gridProps || globalGridProps), { container: true, item: true, key: label + checkboxValue }),\n                                _jsx(FormControl, { children: _jsx(FormControlLabel, { control: _jsx(Checkbox, __assign({}, (checkboxProps || globalCheckboxProps), { disabled: !!valueFromFormControl && thisCheckboxValue !== valueFromFormControl, checked: thisCheckboxValue === valueFromFormControl, onChange: function (_a) {\n                                                var checked = _a.target.checked;\n                                                return onChange(checked ? checkboxValue || label : undefined);\n                                            } }), void 0), label: label }, void 0) }, label)));\n                        }) }, void 0));\n                } }, void 0)] }), void 0));\n};\n//# sourceMappingURL=ManyOptionSingleChoice.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport { createElement as _createElement } from \"react\";\nimport { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { useContext, useEffect, useState } from 'react';\nimport { Checkbox, FormControl, FormControlLabel, Grid, Typography } from '@mui/material';\nimport { Controller } from 'react-hook-form';\nimport { MuiFormContext } from '../../providers';\nexport var FormInputMultiCheckbox = function (_a) {\n    var name = _a.name, label = _a.label, options = _a.options, gridProps = _a.gridProps, globalCheckboxProps = _a.globalCheckboxProps, globalGridProps = _a.globalGridProps, rules = _a.rules, helperText = _a.helperText, _b = _a.subtitleProps, subtitleProps = _b === void 0 ? { variant: 'caption', sx: { color: function (_a) {\n                var palette = _a.palette;\n                return palette.text.secondary;\n            } } } : _b, _c = _a.titleProps, titleProps = _c === void 0 ? { variant: 'h6' } : _c;\n    // if (!setValue) throw new Error('when using Multi Checkbox, you must provide `setValue`.')\n    var _d = useContext(MuiFormContext), control = _d.control, setValue = _d.setValue;\n    var _e = useState([]), selectedItems = _e[0], setSelectedItems = _e[1];\n    var handleSelect = function (value) {\n        var isPresent = selectedItems.indexOf(value);\n        if (isPresent !== -1) {\n            var remaining = selectedItems.filter(function (item) { return item !== value; });\n            setSelectedItems(remaining);\n        }\n        else {\n            setSelectedItems(function (prevItems) { return __spreadArray(__spreadArray([], prevItems, true), [value], false); });\n        }\n    };\n    useEffect(function () {\n        //@ts-ignore\n        setValue(name, selectedItems);\n    }, [selectedItems, name, setValue]);\n    return (_jsxs(Grid, __assign({}, gridProps, { item: true, container: true, sx: { paddingBottom: function (_a) {\n                var spacing = _a.spacing;\n                return spacing(2);\n            } } }, { children: [_jsxs(Grid, __assign({ item: true, xs: 12 }, { children: [_jsx(Typography, __assign({}, titleProps, { children: label }), void 0), _jsx(Typography, __assign({}, subtitleProps, { children: helperText }), void 0)] }), void 0), _jsx(Controller, { name: name, control: control, rules: rules, render: function () { return (_jsx(_Fragment, { children: options.map(function (_a) {\n                        var label = _a.label, checkboxValue = _a.value, gridProps = _a.gridProps, checkboxProps = _a.checkboxProps;\n                        // The `checkboxLabel` can be omitted, if so use the label as the value\n                        var thisCheckboxValue = checkboxValue || label;\n                        return (_createElement(Grid, __assign({}, (gridProps || globalGridProps), { container: true, item: true, key: label + checkboxValue }),\n                            _jsx(FormControl, { children: _jsx(FormControlLabel, { control: _jsx(Checkbox, __assign({}, (checkboxProps || globalCheckboxProps), { \n                                        // TODO: Consider disabled\n                                        checked: selectedItems.includes(thisCheckboxValue), onChange: function () { return handleSelect(thisCheckboxValue); } }), void 0), label: label }, void 0) }, label)));\n                    }) }, void 0)); } }, void 0)] }), void 0));\n};\n//# sourceMappingURL=MultiCheckbox.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { FormInputSelect, FormInputText, FormInputRadio, FormInputCheckbox, FormInputCustomOverride, FormInputSwitch, FormInputManyOptionSingleChoice, FormInputMultiCheckbox } from '..';\nexport var FormInput = function (_a) {\n    var type = _a.type, config = _a.config;\n    switch (type) {\n        case 'select': {\n            var _b = config, control = _b.control, restProps = __rest(_b, [\"control\"]);\n            return _jsx(FormInputSelect, __assign({}, control, restProps), void 0);\n        }\n        case 'text': {\n            var _c = config, control = _c.control, restProps = __rest(_c, [\"control\"]);\n            return _jsx(FormInputText, __assign({}, control, restProps), void 0);\n        }\n        case 'radio': {\n            var _d = config, control = _d.control, restProps = __rest(_d, [\"control\"]);\n            return _jsx(FormInputRadio, __assign({}, control, restProps), void 0);\n        }\n        case 'checkbox': {\n            var _e = config, control = _e.control, restProps = __rest(_e, [\"control\"]);\n            return _jsx(FormInputCheckbox, __assign({}, control, restProps), void 0);\n        }\n        case 'custom': {\n            var _f = config, control = _f.control, restProps = __rest(_f, [\"control\"]);\n            return _jsx(FormInputCustomOverride, __assign({}, restProps, control), void 0);\n        }\n        case 'switch': {\n            var _g = config, control = _g.control, restProps = __rest(_g, [\"control\"]);\n            return _jsx(FormInputSwitch, __assign({}, control, restProps), void 0);\n        }\n        case 'manyOptionsSingleChoice': {\n            var _h = config, control = _h.control, restProps = __rest(_h, [\"control\"]);\n            return _jsx(FormInputManyOptionSingleChoice, __assign({}, control, restProps), void 0);\n        }\n        case 'multiCheckbox': {\n            var _j = config, control = _j.control, restProps = __rest(_j, [\"control\"]);\n            return _jsx(FormInputMultiCheckbox, __assign({}, control, restProps), void 0);\n        }\n        default:\n            throw new Error(\"Unsupported input type: \" + type + \" given. Expected one of: 'text', 'select', 'radio', 'custom', 'switch', 'checkbox', 'manyOptionsSingleChoice\");\n    }\n};\n//# sourceMappingURL=index.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Grid } from '@mui/material';\nimport { FormInput } from '../components';\nexport var MuiForm = function (_a) {\n    var inputs = _a.inputs, _b = _a.gridSpacing, gridSpacing = _b === void 0 ? 1 : _b;\n    return (_jsx(Grid, __assign({ container: true, spacing: gridSpacing }, { children: inputs.map(function (input) { return (_jsx(FormInput, __assign({}, input), input.config.control.name)); }) }), void 0));\n};\n//# sourceMappingURL=MuiForm.js.map","import React, { FC } from 'react'\nimport AdapterDateFns from '@date-io/date-fns'\nimport { TextField } from '@mui/material'\nimport { LocalizationProvider, DatePicker } from '@mui/lab'\nimport { CustomOverrideRenderArgs } from '@caldwell619/mui-form-generator'\n\nimport { SomeObject } from '../forms/kitchen-sink'\n\nexport const FormInputDate: FC<CustomOverrideRenderArgs<SomeObject>> = ({\n  field: { value, onChange },\n  fieldState: { error }\n}) => {\n  return (\n    <LocalizationProvider dateAdapter={AdapterDateFns}>\n      <DatePicker\n        label='Pick a date'\n        inputFormat='MM/dd/yyyy'\n        value={value}\n        onChange={onChange}\n        renderInput={params => <TextField fullWidth {...params} error={!!error} />}\n      />\n    </LocalizationProvider>\n  )\n}\n","import { FC, useContext } from 'react'\nimport { MuiForm, Config, MuiFormContext } from '@caldwell619/mui-form-generator'\nimport { Button } from '@mui/material'\nimport { UseFormReturn } from 'react-hook-form'\nimport { diff } from 'deep-object-diff'\n\nimport { FormInputDate } from 'components'\n\nexport const defaultValues: SomeObject = {\n  one: '1',\n  two: 'Cody',\n  three: 'Wolffe',\n  favoriteCommander: 'Cody',\n  favoriteUnit: '501st',\n  isSignedUpForNewsletter: false,\n  startDate: new Date(),\n  doesWantIceCream: false,\n  isWifiOn: true,\n  options: [],\n  favoriteSeries: ''\n}\n\nconst inputs: Config<SomeObject>[] = [\n  {\n    type: 'text',\n    config: {\n      control: {\n        rules: {\n          required: { value: true, message: 'This is required' },\n          pattern: { value: /^[0-9]*$/, message: 'Must be a number' }\n        },\n        name: 'one',\n        label: 'One'\n      }\n    }\n  },\n  {\n    type: 'checkbox',\n    config: {\n      control: {\n        gridProps: { xs: 12, md: 6 },\n        name: 'isSignedUpForNewsletter',\n        label: 'Sign up for our newsletter?'\n      }\n    }\n  },\n  {\n    type: 'radio',\n    config: {\n      radioGroupProps: { row: true },\n      options: [\n        {\n          label: 'Cody',\n          value: 'cody'\n        },\n        {\n          label: 'Rex',\n          value: 'rex'\n        }\n      ],\n      control: {\n        gridProps: { xs: 12, md: 6 },\n        name: 'favoriteCommander',\n        label: 'Favorite Commander'\n      }\n    }\n  },\n  {\n    type: 'select',\n    config: {\n      options: [\n        {\n          label: '501st',\n          value: '501st'\n        },\n        {\n          label: '212th',\n          value: '212th'\n        }\n      ],\n      control: {\n        name: 'favoriteUnit',\n        label: 'Favorite Unit'\n      }\n    }\n  },\n  {\n    type: 'switch',\n    config: {\n      control: {\n        gridProps: { xs: 12, md: 6 },\n        name: 'isWifiOn',\n        label: 'WiFi'\n      }\n    }\n  },\n  {\n    type: 'checkbox',\n    config: {\n      helperText: 'Everyone loves ice cream',\n      control: {\n        gridProps: { xs: 12, md: 6 },\n        name: 'doesWantIceCream',\n        label: 'Do you want Ice Cream?'\n      }\n    }\n  },\n  {\n    type: 'multiCheckbox',\n    config: {\n      helperText: 'Select all that apply',\n      globalGridProps: { xs: 4 },\n      options: [\n        {\n          label: \"Chocolate\"\n        },\n        {\n          label: 'Vanilla'\n        },\n        {\n          label: 'Strawberry'\n        },\n        {\n          label: 'Sherbert'\n        },\n        {\n          label: 'Cookie Dough'\n        },\n        {\n          label: 'Rocky Road'\n        },\n      ],\n      control: {\n        label: 'Options',\n        name: 'options'\n      }\n    }\n  },\n  {\n    type: 'manyOptionsSingleChoice',\n    config: {\n      globalGridProps: { xs: 6 },\n      options: [\n        {\n          label: \"Sorccer's Stone\"\n        },\n        {\n          label: 'Chamber of Secrets'\n        },\n        {\n          label: 'Prizoner of Azkaban'\n        },\n        {\n          label: 'Goblet of Fire'\n        },\n        {\n          label: 'Order of the Phoenix'\n        },\n        {\n          label: 'Half Blood Prince'\n        },\n        {\n          label: 'Deathly Hallows'\n        }\n      ],\n      control: {\n        name: 'favoriteSeries',\n        label: 'Favorite Series'\n      }\n    }\n  },\n  {\n    type: 'custom',\n    config: {\n      control: {\n        name: 'startDate',\n        children: props => <FormInputDate {...props} />\n      }\n    }\n  }\n]\n\nexport const Form: FC = () => {\n  const { handleSubmit } = useContext<UseFormReturn<SomeObject>>(MuiFormContext)\n  const onSubmit = (data: SomeObject) => {\n    // Here you can do a diff to get what was updated - or whatever you wish to do.\n    const patchDiff = diff(defaultValues, data)\n    console.log('the difference between default and the inputs is:', patchDiff)\n  }\n  return (\n    <form>\n      <MuiForm inputs={inputs} gridSpacing={1} />\n      <Button sx={{ marginTop: ({ spacing }) => spacing(3) }} variant='outlined' onClick={handleSubmit(onSubmit)}>\n        Submit\n      </Button>\n    </form>\n  )\n}\n\nexport interface SomeObject {\n  one: string\n  two: string\n  three: string\n  favoriteCommander: string\n  favoriteUnit: string\n  isSignedUpForNewsletter: boolean\n  startDate: Date\n  doesWantIceCream: boolean\n  isWifiOn: boolean\n  options: string[]\n  favoriteSeries: string\n}\n","import { MuiFormProvider } from '@caldwell619/mui-form-generator'\nimport { Typography, Box } from '@mui/material'\n\nimport { Form as KitchenSinkForm, defaultValues } from './forms/kitchen-sink'\n\nfunction App() {\n  return (\n    <Box sx={{ width: '100%', display: 'flex', justifyContent: 'center', paddingTop: ({ spacing }) => spacing(3) }}>\n      <Box sx={{ maxWidth: { xs: '95vw', sm: '90vw', md: '70vw', lg: '60vw' } }}>\n        <Typography variant='h1' sx={{ fontSize: '2em', marginBottom: ({ spacing }) => spacing(3) }}>\n          Kitchen Sink\n        </Typography>\n        <MuiFormProvider props={{ defaultValues }}>\n          <KitchenSinkForm />\n        </MuiFormProvider>\n      </Box>\n    </Box>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}